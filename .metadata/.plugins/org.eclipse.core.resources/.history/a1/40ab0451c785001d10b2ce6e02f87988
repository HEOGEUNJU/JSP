package kr.or.ddit.member.controller;

import java.beans.PropertyDescriptor;
import java.io.IOException;
import java.lang.reflect.InvocationTargetException;
import java.lang.reflect.Method;
import java.util.Map;

import javax.servlet.ServletException;
import javax.servlet.annotation.WebServlet;
import javax.servlet.http.HttpServlet;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;

import org.apache.commons.beanutils.BeanUtils;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;

import kr.or.ddit.member.dao.MemberDAO;
import kr.or.ddit.member.dao.MemberDAOImpl;
import kr.or.ddit.member.service.MemberService;
import kr.or.ddit.member.service.MemberServiceImpl;
import kr.or.ddit.memo.controller.MemoControllerServlet;
import kr.or.ddit.vo.MemberVO;

@WebServlet("/member/memberInsert.do")
public class MemberInsertControllerServlet extends HttpServlet{
	
	private static final Logger log = LoggerFactory.getLogger(MemoControllerServlet.class);
	
	private MemberDAO dao = new MemberDAOImpl();
	@Override
	protected void doGet(HttpServletRequest req, HttpServletResponse resp) throws ServletException, IOException {
		
		
		
//		4. viewname만들고
		String viewName = "/WEB-INF/views/member/memberForm.jsp";
//		5. 전송
		 if(viewName.startsWith("redirect:")) {
	        viewName = viewName.substring("redirect:".length());
	        resp.sendRedirect(req.getContextPath() + viewName);
	    } else {
	        req.getRequestDispatcher(viewName).forward(req, resp);
	    }
	
	}
	
	@Override
	protected void doPost(HttpServletRequest req, HttpServletResponse resp) throws ServletException, IOException {
		req.setCharacterEncoding("UTF-8");
//		2. vo에 만들고 파라미터값 넣기
		MemberVO member = new MemberVO();
//		1. form 파라미터 받아오기
//		member.setMemId(req.getParameter("memId"));
		
		Map<String, String[]> parameterMap = req.getParameterMap();
		
		try {
			BeanUtils.populate(member, parameterMap);
		} catch (IllegalAccessException | InvocationTargetException e) {
			throw new ServletException(e);
		}
		log.info("member : {}", member);
		dao.insertMember(member);
		resp.sendRedirect(req.getContextPath() + "/member/memberInsert.do");
		
		
	}
}
