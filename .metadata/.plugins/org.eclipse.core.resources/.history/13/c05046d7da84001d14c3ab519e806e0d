package kr.or.ddit.member.dao;

import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.ArrayList;
import java.util.List;

import kr.or.ddit.db.ConnectionFactory;

public abstract class AbstractJDBCDAO{
	
	public <T> List<T> selectList(String sql, Class<T> resultType, Object...params) {
		try(
			Connection conn = makeConnection();
			PreparedStatement pstmt = makePreparedStatement(conn, sql);
		){
			queryParameterSetting(pstmt, params);
			ResultSet rs = executeQuery(pstmt);
			List<T> list = new ArrayList<>();
			while(rs.next()) {
				T recordObject = resultBindingForOneRecord(rs, resultType);
				list.add(recordObject);
			}
			return list;
		}catch (SQLException e) {
			throw new RuntimeException(e);
		}
		
	}
	
	public abstract <T> T resultBindingForOneRecord(ResultSet rs, Class<T> resultType) throws SQLException;


	private Connection makeConnection() throws SQLException {
		return ConnectionFactory.getConnection();
	}
	
	private PreparedStatement makePreparedStatement(Connection conn, String sql) throws SQLException{
		return conn.prepareStatement(sql);
	}
	
	private ResultSet executeQuery(PreparedStatement pstmt) throws SQLException{
		return pstmt.executeQuery();
	}
	
	public abstract void queryParameterSetting(PreparedStatement pstmt, Object...params);
	
}
