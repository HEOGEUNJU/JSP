package kr.or.ddit.member.dao;

import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.ArrayList;
import java.util.List;

import kr.or.ddit.db.ConnectionFactory;
import kr.or.ddit.vo.MemberVO;

public class MemberDAOImpl extends AbstractJDBCDAO implements MemberDAO {

	@Override
	public int insertMember(MemberVO member) {
		
		return 0;
	}

	@Override
	public void queryParameterSetting(PreparedStatement pstmt, Object... params) {
		
	}

	@Override
	public <T> T resultBindingForOneRecord(ResultSet rs, Class<T> resultType) {
		try {
			T resultObject = resultType.newInstance();
			
			MemberVO member = (MemberVO)resultObject;
			member.setMemId(rs.getString("mem_id"));
			member.setMemName(rs.getString("mem_name"));
			member.setMemMail(rs.getString("MEM_MAIL"));
			member.setMemHp(rs.getString("MEM_HP"));
			member.setMemAdd1(rs.getString("MEM_ADD1"));
			member.setMemMileage(rs.getInt("mem_mileage"));
			
			return resultObject;
		}catch (Exception e) {
			throw new RuntimeException();
		}
	}
	
	@Override
	public List<MemberVO> selectMemberList() {
		StringBuffer sql = new StringBuffer();
		sql.append("select mem_id, mem_name, MEM_MAIL, MEM_HP, MEM_ADD1, mem_mileage  ");
		sql.append("from member");
		
		return selectList(sql.toString(), MemberVO.class);
	}

	@Override
	public MemberVO selectMember(String memId) {
		StringBuffer sql = new StringBuffer();
//		1.
		
		try (
			Connection conn = ConnectionFactory.getConnection();
			PreparedStatement pstmt = conn.prepareStatement(sql.toString());
		) {
//			2.
			
			ResultSet rs = pstmt.executeQuery();
			
//			3.
			
			return ;
		}catch (SQLException e) {
			throw new RuntimeException(e);
		}
	}
	

	@Override
	public int updateMember(MemberVO member) {
		// TODO Auto-generated method stub
		return 0;
	}

	@Override
	public int deletemember(String memId) {
		// TODO Auto-generated method stub
		return 0;
	}

}
